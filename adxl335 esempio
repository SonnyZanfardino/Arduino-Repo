//////////////////////////////////////////////////////////////////
//          Simple code for the ADXL335                         //
//////////////////////////////////////////////////////////////////

// faceup --> z~=600
// facedown --> z~=400
// value when change face 500

//faceup and in plain x&y value = 500
//facedown and in plain x&y value = 500 

/*########################################
ACCELLEROMETER VARIABLES
########################################*/
//Analog read pins
const int xPin = A0;
const int yPin = A1;
const int zPin = A2;

int faceLimit = 500;
int plainMax = 525;
int plainMin = 475;

//The minimum and maximum values that came from
//the accelerometer while standing still
//You very well may need to change these
int minVal = 265;
int maxVal = 402;

//to hold the caculated values
double x;
double y;
double z;


/*########################################
SETUP
########################################*/
void setup(){
  Serial.begin(9600);
  
}


/*########################################
LOOP
########################################*/
void loop(){

  //read the analog values from the accelerometer
  int xRead = analogRead(xPin);
  int yRead = analogRead(yPin);
  int zRead = analogRead(zPin);

  //Output
  Serial.print("x: ");
  Serial.print(xRead);
  Serial.print(" | y: ");
  Serial.print(yRead);
  Serial.print(" | z: ");
  Serial.println(zRead);
  
  face(xRead,yRead,zRead); 
 
  inPlain(xRead,yRead,zRead);
  
  delay(1000);//just here to slow down the serial output - Easier to read
}


/*########################################
OUTPUT IF THE SENSOR IS FACEUP OR FACEDOWN
########################################*/
void face(int x, int y, int z){
   if(zRead > faceLimit){
    Serial.println("FACEUP");
  }else{
    Serial.println("FACEDOWN");
  }
}


/*########################################
OUTPUT IF THE SENSOR IS IN PLAIN
########################################*/
void inPlain(int x, int y, int z){
  if ((xRead <= PlainMax && xRead >= PlainMin)  && (yRead <= PlainMax && yRead >= PlainMin)){
    Serial.println("IN PLIAN");
  }
}


/*########################################
CONVERTS TO DEGREES
########################################*/
void converter(int x, int y, int z){
  //convert read values to degrees -90 to 90 - Needed for atan2
  int x = map(x, minVal, maxVal, -90, 90);
  int y = map(y, minVal, maxVal, -90, 90);
  int z = map(z, minVal, maxVal, -90, 90);
  
  //Caculate 360deg values like so: atan2(-yAng, -zAng)
  //atan2 outputs the value of -π to π (radians)
  //We are then converting the radians to degrees
  x = RAD_TO_DEG * (atan2(-y, -z) + PI);
  y = RAD_TO_DEG * (atan2(-x, -z) + PI);
  z = RAD_TO_DEG * (atan2(-y, -x) + PI);
}
